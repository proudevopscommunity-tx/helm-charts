apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "weather.fullname" . }}-auth
  labels:
    {{- include "weather.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "weather.selectorLabels" . | nindent 6 }}-auth
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "weather.labels" . | replace .Release.Name (printf "%s-auth" .Release.Name) | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }} 

    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: init-db
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of Weather Server deployment"; while ! nc -z weather 5000; do sleep 1; printf "-"; done; echo -e "  >> Weather Server has started";']
      containers:
        - name: {{ .Chart.Name }}-auth
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository_auth }}:{{ .Values.image.tag_auth | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.env.configmap_name }}  
                  key: DB_HOST
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env.secret_name }}     
                  key: DB_PASSWORD
            # ports:
            # - containerPort: 8080 


---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "weather.fullname" . }}-auth
  labels:
    {{- include "weather.labels" . | nindent 4 }}
  annotations:
    # alb.ingress.kubernetes.io/healthcheck-path: /index.html
spec:
  selector:
    {{- include "weather.selectorLabels" . | nindent 4 }}-auth
  ports:
    - protocol: TCP
      port: {{ .Values.service.port_auth }}
      targetPort: {{ .Values.service.port_auth }}
  type: {{ .Values.service.type }}
